#TODO list -------------------------------------------------------
# 
# 'Shougo/deoplete.nvim'
# - LSPの設定をしてから neosnippet がポップアップに出てこない...
# 'ujihisa/neco-look'
# - windowsでlookを使う方法を検討
# - もし，自前の辞書を利用する場合 'deoplete-plugins/deoplete-dictionary' を検討


# オートコンプリートプラグイン
[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['neosnippet-snippets']
hook_source = '''
if !has('nvim')
    call dein#add('roxma/nvim-yarp')
    call dein#add('roxma/vim-hug-neovim-rpc')
endif
'''
hook_add='''
" deoplete 有効化
let g:deoplete#enable_at_startup = 1
" 補完に掛かる時間を指定(ms)
call deoplete#custom#var('auto_complete_delay', 10)
" 非同期時から同期に移る時間(ms)
call deoplete#custom#var('auto_refresh_delay', 10)
" 補完が始まるまでに必要な文字数
call deoplete#custom#var('auto_complete_start_length', 1)
" キャメルケースに対応(細かいことはよくわからん)
let g:deoplete#enable_camel_case = 1
" 大文字小文字を無視して補完
let g:deoplete#enable_ignore_case = 1
" 補完機能が作用するたびに候補表示を再表示
call deoplete#custom#var('enable_refresh_always', 1)
" 補完候補の表示数の最大値を設定
call deoplete#custom#var('max_list', 100)
" マルチバイト文字の補完を無効化
let g:skip_multibyte = 1
" deopleteの並列処理のスレッド数 (default : 4)
call deoplete#custom#var('num_processes', 4)

" TAB で補完(順選択)
inoremap <expr> <TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" Shift TAB で補完(逆順選択)
inoremap <expr> <S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
" 補完候補選択中に Ctrl+k でスニペットを展開
imap <expr><C-k> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : ""
smap <expr><C-k> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : ""
'''


# tex記述支援プラグイン
[[plugins]]
repo = 'lervag/vimtex'
depends = ['Shougo/deoplete.nvim']
on_ft = ['tex']
hook_source = '''
" vimtexを利用したオムニ補完を有効化(for deoplete)
call deoplete#custom#var('omni', 'input_patterns', {'tex':g:vimtex#re#deoplete} )
" vimtex 有効化
let g:vimtex_enabled = 1
let g:vimtex_complete = 1
let g:vimtex_complete_bib = { 'simple': 1 }
" ラベル補完の有効化
let g:vimtex_complete_ref = {'custom_patterns'=['\\figref\*\?{[^}]*$']}
" デリミタを登録
let g:vimtex_delim_list = {
            \ 'name' : [
            \   ['\(', '\)'],
            \   ['\[', '\]'],
            \   ['$$', '$$'],
            \   ['$', '$'],
            \ ],
            \ 're' : [
            \   ['\\(', '\\)'],
            \   ['\\\@<!\\\[', '\\\]'],
            \   ['\$\$', '\$\$'],
            \   ['\$', '\$'],
            \ ],
}
'''


# Python用 補完プラグイン   LSPと選択(現在はvim-lspを利用)
# [[plugins]]
# repo = 'zchee/deoplete-jedi'
# on_ft = ['python']
# depends = ['Shougo/deoplete.nvim']
# hook_source = '''
# " 利用するインタプリタの指定
# let g:deoplete#sources#jedi#python_path = g:python3_path
# '''


# 英単語補完プラグイン (lookコマンドとその辞書の導入が必須)
[[plugins]]
repo = 'ujihisa/neco-look'
depends = ['Shougo/deoplete.nvim']
if = 'has("unix") || has("mac")'


# vimコマンド補完用プラグイン
[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim']
depends = ['deoplete.nvim']


# zsh/shコマンド補完用プラグイン
[[plugins]]
repo = 'zchee/deoplete-zsh'
on_ft = ['zsh']
depends = ['deoplete.nvim']



[[plugins]]  # deoplete連携用
repo = 'lighttiger2505/deoplete-vim-lsp'
depends = ['vim-lsp',  'async.vim']


