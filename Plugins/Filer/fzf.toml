
#TODO list -------------------------------------------------------
# 
# 'junegunn/fzf'
# - 各OSに対応した処理に対応したい (fzf, ripgrep両方)
#   - ripgrep:Rust製の高速grepツール
# - コマンドラインから利用するなら sudo apt-get install ripgrep の方が良い
#   - しかし，恐らくvimでしか使わないため，バイナリを拾ってたりする
#   - Rustを導入せずバイナリを拾ってくる
# - 何より余計なインストールの手間を省くことが目標
# - https://leico.github.io/TechnicalNote/VimR/VimR-dein-toml ここ参照
#
# 'junegunn/fzf.vim'
#


# 曖昧検索(ファジー検索)インターフェース
[[plugins]]  
repo = 'junegunn/fzf'
merged = 0
hook_post_update = '''
" --- fzfのインストール	---
" バイナリファイルのディレクトリ
let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
if has('mac')
    try
        let g:dein#plugin.build = './insta --all'
        throw "Error messege: Cannot install fzf..."
    catch /error/  " エラーメッセージにマッチする正規表現
    catch          " 空の場合は必ずマッチする
        " ... 例外処理 ...
        " let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
        if strlen(glob(s:fzf_bin_dir . '/fzf.exe')) == 0
            execute '!curl -OLsS https://github.com/junegunn/fzf-bin/releases/download/0.18.0/fzf-0.18.0-darwin_amd64.tgz'
            execute '!tar -zxvf fzf-0.18.0-darwin_amd64.tgz'
            execute '!mv fzf' s:fzf_bin_dir
            execute '!rm -rf *.tgz'
        endif
    endtry
    " aaaaaaaaaa
elseif has('unix')
    try
        let g:dein#plugin.build = './install --all'
        throw "Error messege: Cannot install fzf..."
    catch /error/  " エラーメッセージにマッチする正規表現
    catch          " 空の場合は必ずマッチする
        " ... 例外処理 ...
        " let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
        if strlen(glob(s:fzf_bin_dir . '/fzf.exe')) == 0
            execute '!curl -OLsS https://github.com/junegunn/fzf-bin/releases/download/0.18.0/fzf-0.18.0-linux_amd64.tgz'
            execute '!tar -zxvf fzf-0.18.0-linux_amd64.tgz'
            execute '!mv fzf' s:fzf_bin_dir
            execute '!rm -rf *.tgz'
        endif
    endtry
elseif has('win64')
    " windowsの場合ビルド方法が分からないため,バイナリを取得(かなり強引)
    " let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
    if strlen(glob(s:fzf_bin_dir . '/fzf.exe')) == 0
        execute '!curl -OLsS https://github.com/junegunn/fzf-bin/releases/download/0.18.0/fzf-0.18.0-windows_amd64.zip'
        execute '!unzip fzf-0.18.0-windows_amd64.zip'
        execute '!move fzf.exe' s:fzf_bin_dir
        execute '!del *.zip'
    endif
else
endif

" --- ripgrep のインストール ---
" ripgrepのバイナリを強引に取得
if has('mac')
    " let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
    if strlen(glob(s:fzf_bin_dir . '/rg')) == 0
        execute '!curl -OLsS https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep-11.0.2-x86_64-apple-darwin.tar.gz'
        execute '!tar -zxvf ripgrep-11.0.2-x86_64-apple-darwin.tar.gz'
        execute '!mv ./ripgrep*/rg' s:fzf_bin_dir
        execute '!rm -rf ./ripgrep-11.0.2-x86_64-*'
    endif
    
elseif has('unix')
    let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
    if strlen(glob(s:fzf_bin_dir . '/rg')) == 0
        execute '!curl -OLsS https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep-11.0.2-x86_64-unknown-linux-musl.tar.gz'
        execute '!tar -zxvf ripgrep-11.0.2-x86_64-unknown-linux-musl.tar.gz'
        execute '!mv ./ripgrep*/rg' s:fzf_bin_dir
        execute '!rm -rf ./ripgrep-11.0.2-x86_64-unknown-linux-musl*'
    endif

elseif has('win64')
    " rg.exeのパスをこのスコープ内で追加したい(まだ出来てない)
    " let s:fzf_bin_dir = expand(g:dein_dir . '/repos/github.com/junegunn/fzf/bin')
    if strlen(glob(s:fzf_bin_dir . '/rg.exe')) == 0
        execute '!curl -OLsS https://github.com/BurntSushi/ripgrep/releases/download/11.0.2/ripgrep-11.0.2-x86_64-pc-windows-gnu.zip'
        execute '!unzip ripgrep-11.0.2-x86_64-pc-windows-gnu.zip'
        execute '!move rg.exe' s:fzf_bin_dir
        execute '!del *.zip'
        execute '!del *.ps1'
    endif
else
endif
'''


[[plugins]]  # 'junegunn/fzf' のvim用プラグイン
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
" Ctrl + t で現在開いているバッファの一覧表示及び絞り込み
nnoremap <C-t> :Buffers<CR>
" Ctrl + p でファイル検索
nnoremap <C-p> :Files<CR>
" Ctrl + g でRipgrep(ripgrepがインストールされていないと使えない)
nnoremap <C-g> :Rg<CR>
" Ctrl + h で最近展開したファイルを表示&検索
nnoremap <C-h> :History<CR>
" ステータスラインの非表示化
augroup fzf
    autocmd!
    autocmd! FileType fzf
    au  FileType fzf set laststatus=0 noshowmode noruler
                \| au BufLeave <buffer> set laststatus=2 showmode ruler
augroup END


" 可能であれば展開済みバッファへ移動
let g:fzf_buffers_jump = 1
" 表示領域を画面下部N%以内にする
let g:fzf_layout = {'down': '~40%'}

" :Rg コマンドでプレビュー表示 (TODO windowsに対応できていない?)
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:~60%')
  \           : fzf#vim#with_preview('right:45%'),
  \   <bang>0)

" :Files コマンドでプレビュー表示
command! -bang -nargs=? -complete=dir Files
  \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)
'''
