[[plugins]]  # プラグインマネージャー
repo = 'Shougo/dein.vim'



[[plugins]]  # カラースキーマ(おすすめは onedark)
repo = 'jacoborus/tender.vim'
hook_add = '''
syntax on
colorscheme tender
'''



[[plugins]]  # ステータスバーカスタム
repo = 'vim-airline/vim-airline'
hook_add = '''
" タブの有効化
let g:airline#extensions#tabline#enabled = 1
" タブに番号を表示
let g:airline#extensions#tabline#buffer_idx_mode = 1
" Shift-Tab でタブの切り替え
nmap <S-Tab> <Plug>AirlineSelectNextTab
" ALE(dein_lazy.tomlに記載)のための拡張設定
let g:airline#extensions#ale#enabled = 1
'''



[[plugins]]  # vim-airline のテーマ
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
" テーマ一覧 (https://github.com/vim-airline/vim-airline/wiki/Screenshots)
let g:airline_theme='onedark'
'''

[[plugins]]  # vim でgit の操作を行う
repo = 'tpope/vim-fugitive'



[[plugins]]  # git の diffを左端に表示
repo = 'airblade/vim-gitgutter'
hook_add = '''
" 常に表示 (vimのバージョン違いに対応)
if exists('&signcolumn')  " Vim 7.4.2201
    set signcolumn=yes
else
    let g:gitgutter_sign_column_always = 1
endif
'''


[[plugins]]  # Ctrl+p でファイルの検索
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
" キャッシュを使用して検索を高速化 (ファイルサイズが大きい場合効果的)
let g:ctrlp_use_caching = 1
" vim終了時にキャッシュをクリアしない
let g:ctrlp_clear_cache_on_exit = 0
" <C-r>でキャッシュをクリアして再検索
let g:ctrlp_prompt_mappings = { 'PrtClearCache()': ['<C-r>'] }
'''



[[plugins]]  # インデントの可視化 
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
" indent guideの有効
let g:indent_guides_enable_on_vim_startup = 1
" 自動で色を付けない
let g:indent_guides_auto_colors = 0
" ガイドの幅を設定
let g:indent_guides_guide_size = 1
" 色の変更(詳しい配色 'ctermbg vim'等で検索 )
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd ctermbg=236
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=238
'''



[[plugins]]  # j,k キーでカーソル移動の高速化
repo = 'rhysd/accelerated-jk'
hook_add = '''
" j,kにキーマッピング
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)
'''



[[plugins]]  # sキーで特定文字へカーソルジャンプ
repo = 'easymotion/vim-easymotion'
hook_add = '''
let g:EasyMotion_do_mapping = 0
nmap s <Plug>(easymotion-s2)
xmap s <Plug>(easymotion-s2)
omap z <Plug>(easymotion-s2)
nmap g/ <Plug>(easymotion-sn)
xmap g/ <Plug>(easymotion-sn)
omap g/ <Plug>(easymotion-tn)
let g:EasyMotion_smartcase = 1
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
let g:EasyMotion_startofline = 0
let g:EasyMotion_keys = 'QZASDFGHJKL;'
let g:EasyMotion_use_upper = 1
let g:EasyMotion_enter_jump_first = 1
'''



[[plugins]]  # 括弧補間
repo = 'Townk/vim-autoclose'



[[plugins]]  # gcc でコメントアウト
repo = 'tomtom/tcomment_vim'



[[plugins]]  # ディレクトリツリーを表示する
repo = 'scrooloose/nerdtree'
hook_add = '''
" Vimの起動時にNerdTreeも起動
" autocmd vimenter * NERDTree
" ただし，ファイルを指定してVimを開く時はNerdTreeを起動しない
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
" ディレクトリの表示記号を変更
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable  = '▶'
let g:NERDTreeDirArrowCollapsible = '▼'
'''



[[plugins]]  # バッファ上のコードを実行し、その結果をVimへ出力
repo = 'thinca/vim-quickrun'



[[plugins]]  # ヴィジュアルモードの選択範囲を「*」で検索
repo = 'nelstrom/vim-visual-star-search'



