[[plugins]]  # オートコンプリートプラグイン
# この辺を参考に作る
# https://github.com/Shougo/neocomplete.vim/blob/master/doc/neocomplete.txt
# https://www.karakaram.com/neocomplcache#install-vimproc
# https://qiita.com/ARS/items/175ada5625a607a2b950#vimrc%E6%9C%AC%E4%BD%93
# https://alpaca.tc/blog/vim/neocomplete-vs-youcompleteme.html
# https://vim-jp.org/vim-users-jp/2009/05/01/Hack-4.html
# 
repo = 'Shougo/neocomplete.vim'
on_i = 1
on_ft = ['python', 'c']
hook_add = '''
""" 一般設定 """
" neocompleteの使用 (0:無効 1:有効)
let g:neocomplete#enable_at_startup=1
" ポップアップで表示される候補の数
let g:neocomplete#max_list = 12
" キーワードの長さ
let g:neocomplete#max_keyword_width = 80
" 大文字小文字を無視して候補を出す (0:無効 1:有効)
let g:neocomplete#enable_ignore_case = 1
" キャメルケースの入力時の補完を有効にする(0:無効 1:有効)
let g:neocomplete#enable_camel_case = 1
" スマートケースの利用 (0:無効 1:有効)
let g:neocomplete#enable_smart_case=0
" キャッシュサイズを設定
let g:neocomplete#sources#buffer#cache_limit_size = 1000000
let g:neocomplete#sources#tags#cache_limit_size   = 30000000

" 補完候補の出力に必要なキーワードの数
let g:neocomplete#sources#syntax#min_keyword_lenth=1
" 補完時に画面上部に出てくるdocstringを非表示にする
autocmd FileType python setlocal completeopt-=preview
" 補完に時間が掛かる場合，補完をスキップ(sec)
let g:neocomplete#skip_auto_completion_time = '0.1'
" オートコンプリートが表示されるまでに掛かる時間(ms)
let g:neocomplete#auto_complete_delay = 10


""" キーマッピング """
" よくわからん奴
inoremap <expr><C-g> neocomplete#undo_completion()
inoremap <expr><C-l> neocomplete#complete_common_string()

" C-n で補完
inoremap <expr><C-n> pumvisible() ? "\<C-n>" : "\<C-x>\<C-o>\<C-p>"
" 補完候補表示時，次の補完候補を選択
inoremap <expr><TAB> pumvisible() ? "\<C-n>" : "\<TAB>"
" 補完候補表示時，前の補完候補を選択
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<S-TAB>"
" 補完候補表示中，選択中の候補を選択し補完終了(それ以外はリターンとして動作)
inoremap <expr><CR> pumvisible() ? "\<C-y>" : "\<CR>"
" 補完候補表示中に C-h を押した時，入力中の文字列に合わせて補完候補を再生成する
inoremap <expr><C-h> neocomplete#smart_close_popup()."\<C-h>"
" 補完のキャンセル
inoremap <expr><C-e> pumvisible() ? neocomplete#cancel_popup() :""

" 文字を入力するたびに補完を表示(特定言語のみ適応)
function! LiveComplete()
    for k in split("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_",'\zs')
    exec "inoremap <expr> " .k. " pumvisible() ? '" .k. "' : '" .k. "\<C-X>\<C-O>\<C-P>'"
    endfor
endfunction
autocmd FileType python call LiveComplete()
autocmd FileType c call LiveComplete()

" 使用する補完の種類を指定
" デフォルト: ['file', 'tag', 'neosnippet', 'vim', 'dictionary', 'omni', 'member', 'syntax', 'include', 'buffer', 'file/include']
let g:neocomplete#sources = {'_' : ['vim', 'omni', 'include', 'buffer', 'file/include']}

""" 各言語との連携 """
autocmd FileType python setlocal omnifunc=jedi#completions
let g:jedi#auto_vim_configuration = 0

"  オムニ補完の有効化(遅くなる)
if !exists('g:neocomplete#force_omni_input_patterns')
    let g:neocomplete#force_omni_input_patterns = {}
endif

let g:neocomplete#force_omni_input_patterns.python = '\h\w*\|[^. \t]\.\w*'

'''



[[plugins]]  # Python用オートコンプリートプラグイン
# この記事を参照 https://wonderwall.hatenablog.com/entry/2017/01/29/213052
repo = 'davidhalter/jedi-vim'
on_source = ['neocomplete']
on_ft = ['python']



[[plugins]]  # オートコンプリートプラグイン 英単語補完
repo = 'ujihisa/neco-look'
on_source = ['neocomplete']
hook_add = '''
'''



[[plugins]] #.toml ファイルのシンタックスハイライター
repo = 'cespare/vim-toml'
on_ft = ['toml']
